<?xml version="1.0" encoding="UTF-8"?>
<!-- ***** BEGIN LICENSE BLOCK *****
  -
  - Version: GPL 3.0
  -
  - ZNotes
  - Copyright (C) 2012 Alexander Kapitman
  -
  - This program is free software: you can redistribute it and/or modify
  - it under the terms of the GNU General Public License as published by
  - the Free Software Foundation, either version 3 of the License, or
  - (at your option) any later version.
  -
  - This program is distributed in the hope that it will be useful,
  - but WITHOUT ANY WARRANTY; without even the implied warranty of
  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  - GNU General Public License for more details.
  -
  - You should have received a copy of the GNU General Public License
  - along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -
  - The Original Code is ZNotes.
  -
  - Initial Developer(s):
  -   Alexander Kapitman <akman.ru@gmail.com>
  -
  - Portions created by the Initial Developer are Copyright (C) 2012
  - the Initial Developer. All Rights Reserved.
  -
  - Contributor(s):
  -
  - ***** END LICENSE BLOCK ***** -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:param name="debug" />
<xsl:output method="text" />
<xsl:template match="//application">
<xsl:text>/*****************************************************
 * This code was generated by a tool.                *
 * Changes to this file may cause incorrect behavior *
 * and will be lost if the code is regenerated.      *
 *****************************************************/

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Version: GPL 3.0
 *
 * ZNotes
 * Copyright (C) 2012 Alexander Kapitman
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/>.
 *
 * The Original Code is ZNotes.
 *
 * Initial Developer(s):
 *   Alexander Kapitman &lt;akman.ru@gmail.com>
 *
 * Portions created by the Initial Developer are Copyright (C) 2012
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * ***** END LICENSE BLOCK ***** */

const EXPORTED_SYMBOLS = ["Product"];

var Product = function() {
  return {
    get Id() { return "</xsl:text><xsl:value-of select="//application/id" /><xsl:text>";      },
    get Name() { return "</xsl:text><xsl:value-of select="//application/name" /><xsl:text>";    },
    get Version() { return "</xsl:text><xsl:value-of select="//application/version" /><xsl:text>"; },
    get Vendor() { return "</xsl:text><xsl:value-of select="//application/vendor" /><xsl:text>";    },
    get Bundle() { return "</xsl:text><xsl:value-of select="//application/bundle" /><xsl:text>";      },
    get Build() { return "</xsl:text><xsl:value-of select="//application/build" /><xsl:text>";      },
    get Site() { return "</xsl:text><xsl:value-of select="//application/site/url" /><xsl:text>";    },
    get ApplicationLanguages() {
      var list = "</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:value-of select="@name" /><xsl:text>,</xsl:text>
    </xsl:for-each>
    <xsl:text>";
      return list.substr( 0, list.length - 1 );
    },
    get SiteLanguages() {
      var list = "</xsl:text>
    <xsl:for-each select="//application/site/localized/locale">
      <xsl:value-of select="@name" /><xsl:text>,</xsl:text>
    </xsl:for-each>
    <xsl:text>";
      return list.substr( 0, list.length - 1 );
    },
    get Urls() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/site/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": </xsl:text>
      <xsl:text>{ index: "</xsl:text><xsl:value-of select="//application/site/localized/locale[@name=$lang]/url" /><xsl:text>", </xsl:text>
      <xsl:text>forum: "</xsl:text><xsl:value-of select="//application/site/localized/locale[@name=$lang]/forum" /><xsl:text>" },&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Licenses() {
      return [&#xa;</xsl:text>
    <xsl:for-each select="//application/licenses/license">
      <xsl:text>        { name: "</xsl:text><xsl:value-of select="name" /><xsl:text>", </xsl:text>
      <xsl:text>link: "</xsl:text><xsl:value-of select="link" /><xsl:text>" },&#xa;</xsl:text>
    </xsl:for-each><xsl:text>      ];
    },
    get Repositories() {
      return [&#xa;</xsl:text>
    <xsl:for-each select="//application/repositories/repository">
      <xsl:text>        { name: "</xsl:text><xsl:value-of select="name" /><xsl:text>", </xsl:text>
      <xsl:text>link: "</xsl:text><xsl:value-of select="link" /><xsl:text>" },&#xa;</xsl:text>
    </xsl:for-each><xsl:text>      ];
    },
    get Creators() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": [&#xa;</xsl:text>
      <xsl:for-each select="//application/localized/locale[@name=$lang]/creator">
        <xsl:text>          { name: "</xsl:text><xsl:value-of select="name" /><xsl:text>", </xsl:text>
        <xsl:text>link: "</xsl:text><xsl:value-of select="link" /><xsl:text>" },&#xa;</xsl:text>
      </xsl:for-each>
      <xsl:text>        ],&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Contributors() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": [</xsl:text>
      <xsl:for-each select="//application/localized/locale[@name=$lang]/contributor">
        <xsl:text>&#xa;          {&#xa;            name: "</xsl:text><xsl:value-of select="name" /><xsl:text>",</xsl:text>
        <xsl:text>&#xa;            title: "</xsl:text><xsl:value-of select="normalize-space(title)" /><xsl:text>", </xsl:text>
        <xsl:text>&#xa;            description: "</xsl:text><xsl:value-of select="normalize-space(description)" /><xsl:text>", </xsl:text>
        <xsl:text>&#xa;            link: "</xsl:text><xsl:value-of select="link" /><xsl:text>",&#xa;            licenses: [&#xa;</xsl:text>
        <xsl:for-each select="./license">
          <xsl:text>              {&#xa;                name: "</xsl:text><xsl:value-of select="name" /><xsl:text>",</xsl:text>
          <xsl:text>&#xa;                link: "</xsl:text><xsl:value-of select="link" /><xsl:text>"&#xa;              },&#xa;</xsl:text>
        </xsl:for-each>
        <xsl:text>            ],&#xa;          },</xsl:text>
      </xsl:for-each>
      <xsl:text>&#xa;        ],&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Translators() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": [&#xa;</xsl:text>
      <xsl:for-each select="//application/localized/locale[@name=$lang]/translator">
        <xsl:text>          { name: "</xsl:text><xsl:value-of select="name" /><xsl:text>", </xsl:text>
        <xsl:text>link: "</xsl:text><xsl:value-of select="link" /><xsl:text>" },&#xa;</xsl:text>
      </xsl:for-each>
      <xsl:text>        ],&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Credits() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": [</xsl:text>
      <xsl:for-each select="//application/localized/locale[@name=$lang]/credit">
        <xsl:text>&#xa;          {&#xa;            name: "</xsl:text><xsl:value-of select="name" /><xsl:text>",</xsl:text>
        <xsl:text>&#xa;            title: "</xsl:text><xsl:value-of select="normalize-space(title)" /><xsl:text>", </xsl:text>
        <xsl:text>&#xa;            description: "</xsl:text><xsl:value-of select="normalize-space(description)" /><xsl:text>", </xsl:text>
        <xsl:text>&#xa;            link: "</xsl:text><xsl:value-of select="link" /><xsl:text>",&#xa;            licenses: [&#xa;</xsl:text>
        <xsl:for-each select="./license">
          <xsl:text>              {&#xa;                name: "</xsl:text><xsl:value-of select="name" /><xsl:text>",</xsl:text>
          <xsl:text>&#xa;                link: "</xsl:text><xsl:value-of select="link" /><xsl:text>"&#xa;              },&#xa;</xsl:text>
        </xsl:for-each>
        <xsl:text>            ],&#xa;          },</xsl:text>
      </xsl:for-each>
      <xsl:text>&#xa;        ],&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Copyrights() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": [&#xa;</xsl:text>
      <xsl:for-each select="//application/localized/locale[@name=$lang]/copyright">
        <xsl:text>          { prefix: "</xsl:text><xsl:value-of select="prefix" /><xsl:text>", </xsl:text>
        <xsl:text>year: "</xsl:text><xsl:value-of select="year" /><xsl:text>", </xsl:text>
        <xsl:text>author: "</xsl:text><xsl:value-of select="author" /><xsl:text>", </xsl:text>
        <xsl:text>reserved: "</xsl:text><xsl:value-of select="reserved" /><xsl:text>" },&#xa;</xsl:text>
      </xsl:for-each>
      <xsl:text>        ],&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Title() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": "</xsl:text>
      <xsl:value-of select="//application/localized/locale[@name=$lang]/title" /><xsl:text>",&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    },
    get Description() {
      return {&#xa;</xsl:text>
    <xsl:for-each select="//application/localized/locale">
      <xsl:variable name="lang" select="@name" />
      <xsl:text>        "</xsl:text><xsl:value-of select="$lang" /><xsl:text>": "</xsl:text>
      <xsl:value-of select="//application/localized/locale[@name=$lang]/description" /><xsl:text>",&#xa;</xsl:text>
    </xsl:for-each>
    <xsl:text>      };
    }
  };
}();
</xsl:text>
</xsl:template>
</xsl:stylesheet>
